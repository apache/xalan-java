<!--
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->

Copyright 1999-2024 The Apache Software Foundation

Authors:
   Gary Gregory <ggregory@apache.org>
   Joe Kesselman <jkesselm@apache.org>
   Mukul Gandhi <mukulg@apache.org>

This git repos branch contains source code and other related files, for Xalan-J's implementation of 
XSLT 3.0 interpretive processor with basic level of conformance. This git repos branch
also contains source code, for Xalan-J's compiled processor (named XSLTC) that supports XSLT 1.0 
version only. XSLT 1.0 implementation of Xalan-J's interpretive processor, is not available within this git repos branch.

This file essentially contains instructions on how to, make Xalan-J builds from this git repos branch. The build for 
this branch is based on Ant build tool, but that may likely change in future to a Maven based build.

Steps to make Xalan-J build from this git repos branch:

1) Set JAVA_HOME environment variable, pointing to a local JDK installation folder.

The codebase within this git repos branch, has been developed and tested using Java 1.8 version.

2) The following two build actions are currently available.

2.1) Command : build clean jar
This build command shall produce the Java jar files xalan.jar, and serializer.jar 
within the folder "build".

2.2) Command : build clean dist
This build command shall produce the Xalan-J implementation distribution binary and source archives, 
that shall typically be distributed to Xalan-J users. Xalan-J distribution archives like following
shall be produced by this build command:
xalan-j_a_b_c-bin.zip
xalan-j_a_b_c-bin.tar.gz
xalan-j_a_b_c-src.zip
xalan-j_a_b_c-src.tar.gz

The Xalan-J distribution source archives shall also contain, Xalan-J's XSLT 3.0 conformance test suite,
within the folder "tests".







