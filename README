<!--
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements. See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License. You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
-->

Copyright 1999-2024 The Apache Software Foundation

Authors:
   Gary Gregory <ggregory@apache.org>
   Joe Kesselman <jkesselm@apache.org>
   Mukul Gandhi <mukulg@apache.org>

This git repos branch contains source code and a test suite, for Xalan-J's implementation of XSLT 3.0 
(https://www.w3.org/TR/xslt-30/) and XPath 3.1 (https://www.w3.org/TR/xpath-31/) specifications 
(collectively known as XSL 3 specifications, excluding XQuery language implementation which also forms 
part of XSL 3 set of specifications).

This readme document specifies instructions on how to prepare Xalan-J build from this git repos branch. 
To prepare Xalan-J's build from this git repos branch, an Ant build tool (https://ant.apache.org/) 
is needed.

Following are the steps to prepare Xalan-J's build and run the provided test suite from this 
git repos branch:

1) Set JAVA_HOME environment variable, referring to a local JDK installation folder.

The codebase within this git repos branch, has been developed and tested using Java language 
version 8/1.8.

2) The following build commands are currently available, on this git repos branch.

2.1) Command : build clean jar
This build command produces Xalan-J's compiled jar files xalan.jar and serializer.jar.

2.2) Command : build clean dist
This build command produces Xalan-J's implementation as distribution binary and source archives, 
that shall typically be consumed by Xalan-J users within XML applications. Xalan-J distribution 
archives with names like following shall be produced by this build command.
xalan-j_a_b_c-bin.zip
xalan-j_a_b_c-bin.tar.gz
xalan-j_a_b_c-src.zip
xalan-j_a_b_c-src.tar.gz

The Xalan-J distribution source archives shall also contain, Xalan-J's XSLT 3.0 and XPath 3.1 
conformance test suite, within the folder "tests".

3) Following are the steps to run Xalan-J's XSL 3 test suite from the src distribution, for 
Windows environment:

3.1) Assume that, Xalan-J's source distribution (i.e, xalan-j_3_0_1-src.zip for Xalan-J's 
XSL 3 latest version) is unpacked within the local folder path d:\xalan-j_3_0_1-src\xalan-j_3_0_1. 
From this local folder location, run the build command "build clean jar".

3.2) From the folder d:\xalan-j_3_0_1-src\xalan-j_3_0_1\tests\bin, run the batch file 
run.bat to run Xalan-J's XSL 3 test suite. The following result after running the batch
file run.bat indicates that, the specified number (848 in an example below) of Xalan-J test 
cases have run successfully.  

JUnit version 4.13.2
......................................................
Time: 4.329

OK (848 tests) 

The document https://xalan.apache.org/xalan-j/xsl3/xalanj_xslt3.0_implementation_status.pdf, provides
latest details about Xalan-J's XSLT 3.0 and XPath 3.1 implementation status.
